/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        shortcuts_layer {
            bindings = <&mo 3>;
            key-positions = <36 41>;
            layers = <0>;
        };

        lock_screen {
            bindings = <&kp LC(LG(Q))>;
            key-positions = <0 11>;
            layers = <3>;
        };

        bluetooth {
            bindings = <&mo 4>;
            key-positions = <36 37 40 41>;
            layers = <4>;
        };
    };

    macros {
        COM_PASS: COM_PASS {
            compatible = "zmk,behavior-macro";
            label = "COM_PASS";
            #binding-cells = <0>;
            bindings = <&kp N &kp A &kp M &kp N &kp H &kp U &kp AT &kp F &kp A &kp S &kp O &kp L &kp U &kp T &kp I &kp O &kp N &kp S &kp N8>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q          &kp W  &kp E  &kp R             &kp T        &kp Y      &kp U         &kp I  &kp O      &kp P     &kp BSPC
&kp LCTRL  &kp A          &kp S  &kp D  &kp F             &kp G        &kp H      &kp J         &kp K  &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp BACKSLASH  &kp Z  &kp X  &kp C             &kp V        &kp B      &kp N         &kp M  &kp COMMA  &kp DOT   &kp SLASH
                                 &mo 1  &kp LEFT_COMMAND  &kp ENTER    &kp SPACE  &kp LEFT_ALT  &mo 2
            >;

            label = "base";
        };

        num_nav {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp GRAVE  &kp UP    &none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &none   &kp N7        &kp N8  &kp N9  &kp STAR    &kp BACKSPACE
&trans      &kp LEFT   &kp DOWN  &kp RIGHT  &kp HOME          &kp PG_UP            &none   &kp N4        &kp N5  &kp N6  &kp MINUS   &kp PLUS
&trans      &none      &none     &none      &kp END           &kp PG_DN            &kp N0  &kp NUMBER_1  &kp N2  &kp N3  &kp KP_DOT  &kp KP_EQUAL
                                 &trans     &trans            &trans               &trans  &trans        &mo 3
            >;

            label = "num&nav";
        };

        sign_func {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1           &kp F2       &kp F3    &kp F4      &kp F5        &kp F6          &kp F7         &kp F8        &kp F9                &kp F10                &kp F11    &kp F12
&kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT   &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp MINUS  &kp EQUAL
&trans           &kp C_PREV   &kp C_PP  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP    &kp C_BRI_DN   &kp C_BRI_UP  &none                 &none                  &none      &kp RIGHT_SHIFT
                                        &mo 3       &trans        &trans          &kp RC(SPACE)  &trans        &trans
            >;

            label = "sign&func";
        };

        shortcuts {
            bindings = <
&kp LC(TAB)     &kp LS(LC(TAB))  &kp LG(W)  &none      &none      &kp LG(T)    &kp F13               &kp F14  &kp F15  &none  &COM_PASS  &kp C_MUTE
&none           &none            &kp LG(S)  &none      &none      &none        &none                 &none    &none    &none  &none      &none
&kp LEFT_SHIFT  &none            &kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)    &kp LS(LG(NUMBER_4))  &none    &none    &none  &none      &none
                                            &none      &none      &none        &none                 &none    &none
            >;

            label = "shortcuts";
        };

        bluetooth {
            bindings = <
&none  &none  &none  &none  &none  &none    &none       &none         &none         &none         &none         &out OUT_TOG
&none  &none  &none  &none  &none  &none    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none  &none  &none  &none  &none  &none    &none       &none         &none         &bt BT_PRV    &bt BT_NXT    &none
                     &none  &none  &none    &none       &none         &none
            >;
        };
    };
};
